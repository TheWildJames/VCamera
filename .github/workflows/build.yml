name: Ubuntu Android CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up JDK 8 (required for JavaVersion.VERSION_1_8)
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    # Install Ubuntu dependencies (e.g., for native components or v4l2loopback)
    - name: Install Ubuntu dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libopencv-dev v4l2loopback-dkms
        sudo modprobe v4l2loopback devices=1

    # Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: '9477386_latest' # Use a valid version from https://developer.android.com/studio#downloads
        packages: |
          build-tools;31.0.0
          platforms;android-33
          platform-tools

    # Accept Android SDK licenses
    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk

    # Cache Gradle dependencies
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    # Grant execute permission for gradlew
    - name: Grant execute permission moulding
      run: chmod +x gradlew
      working-directory: ${{ github.workspace }}

    # Build the project with Gradle
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ${{ github.workspace }}

    # Run tests (if applicable)
    - name: Run tests
      run: ./gradlew test
      working-directory: ${{ github.workspace }}
      continue-on-error: true # Skip if tests are not set up

    # Upload build artifacts (e.g., APKs)
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vcamera-ubuntu-apks
        path: |
          **/build/outputs/apk/**/*.apk
